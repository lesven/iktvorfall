server {
    listen 80;
    server_name localhost;
    
    # Redirect HTTP to HTTPS (uncomment in production)
    # return 301 https://$host$request_uri;
    
    # Root and index configuration 
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/javascript
        application/json
        application/xml
        application/xml+rss
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Security headers
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;";
    
    location / {
        try_files $uri $uri/ =404;
        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    }

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;
        # Performance optimization
        tcp_nodelay on;
        tcp_nopush on;
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;    # Health check endpoint
    location = /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy", "timestamp":$time_iso8601}';
    }
}

# HTTPS server configuration (uncomment in production)
#server {
#    listen 443 ssl;
#    server_name localhost;
#
#    # SSL Certificate Configuration
#    ssl_certificate /etc/nginx/ssl/cert.pem;
#    ssl_certificate_key /etc/nginx/ssl/key.pem;
#    
#    # SSL Session Configuration
#    ssl_session_cache shared:SSL:10m;
#    ssl_session_timeout 1d;
#    ssl_session_tickets off;
#
#    # Modern SSL Settings
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_prefer_server_ciphers on;
#    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
#
#    # Security Headers for HTTPS
#    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#    add_header X-Content-Type-Options "nosniff";
#    add_header X-XSS-Protection "1; mode=block";
#    add_header X-Frame-Options "SAMEORIGIN";
#    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;";
#
#    # Root and index configuration 
#    root /usr/share/nginx/html;
#    index index.html;
#
#    # Rest of configuration is the same as the HTTP server
#    location / {
#        try_files $uri $uri/ =404;
#    }
#
#    # Cache static assets
#    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
#        expires 30d;
#        add_header Cache-Control "public, no-transform";
#        access_log off;
#    }
#    
#    # Error pages
#    error_page 404 /index.html;
#    error_page 500 502 503 504 /index.html;
#    
#    # Health check endpoint
#    location = /health {
#        access_log off;
#        add_header Content-Type application/json;
#        return 200 '{"status":"healthy", "timestamp":$time_iso8601}';
#    }
#}
        access_log off;
        add_header Content-Type text/plain;
        return 200 'OK';
    }
}
